long long binaryExponentiation(long long a, long long b, long long m) {
    long long result = 1;
    a = a % m;

    while (b > 0) {
        if (b & 1) {
            result = (result * a) % m;
        }

        a = (a * a) % m;
        b >>= 1;
    }

    return result;
}


Why Not Binary Exponentiation?
Binary Exponentiation is faster for integer powers but is limited to integers.
The pow() function is designed to work with floating-point bases and exponents, making general-purpose algorithms more suitable.
